.category-navigation {
  grid-area: globe-nav-area;
  z-index: 2;
  display: flex;
  justify-content: start;
  place-self: end center;
  clip-path: inset(50% 100% 0 0);

  z-index: 1;
  overscroll-behavior: contain;
  overflow: hidden;

  @media screen and (--desktop-viewport) {
    clip-path: inset(0 100% 0 0); /* On desktop, don't clip the top */
  }

  &.reveal-from-right {
    animation: revealFromRight 0.5s linear forwards;
  }

  &.reveal-from-left {
    animation: revealFromLeft 0.5s linear forwards;
  }

  &.concealed {
    animation: none !important;
  }

  &.conceal {
    animation: concealToRight 0.5s linear forwards;
  }

  @media screen and (--desktop-viewport) {
    place-self: center center;
    height: 100%;
    align-items: center;
  }

  .circle-container {
    /*translate: 0 -50%;*/
    transition: all 0.5s ease-out;

    @media screen and (--desktop-viewport) {
      translate: 0 0;
    }
  }
}
/*. Clip the top 50% of the div on initial load (and keep it clipped)*/
@keyframes revealFromRight {
  from {
    clip-path: inset(50% 0 0 100%);
  }

  to {
    clip-path: inset(50% 0 0 0);
  }
}

/* Desktop version of the animation */
@media screen and (--desktop-viewport) {
  @keyframes revealFromRight {
    from {
      clip-path: inset(0 0 0 100%);
    }

    to {
      clip-path: inset(0 0 0 0);
    }
  }
}

@keyframes rotateBack {
  from {
    transform: rotate(10deg);
  }

  to {
    transform: rotate(0deg);
  }
}

@keyframes concealToRight {
  from {
    clip-path: inset(50% 0 0 0);
  }

  to {
    clip-path: inset(50% 0 0 100%);
  }
}

/* Desktop version of the conceal animation */
@media screen and (--desktop-viewport) {
  @keyframes concealToRight {
    from {
      clip-path: inset(0 0 0 0);
    }

    to {
      clip-path: inset(0 0 0 100%);
    }
  }
}

@keyframes revealFromLeft {
  from {
    clip-path: inset(50% 100% 0 0);
  }

  to {
    clip-path: inset(50% 0 0 0);
  }
}

/* Desktop version of reveal from left animation */
@media screen and (--desktop-viewport) {
  @keyframes revealFromLeft {
    from {
      clip-path: inset(0 100% 0 0);
    }

    to {
      clip-path: inset(0 0 0 0);
    }
  }
}

.chosenCategory {
  word-break: break-word;
  text-transform: capitalize;
  grid-area: globe-nav-area;
  z-index: 2;
  color: white;
  color: var(--Neutral-White, #fff);
  text-align: center;
  max-width: 80%;
  /* Mobile/H3 */
  font-family: NotesEsaBold;
  font-size: 30px;
  font-style: normal;
  font-weight: 700;
  line-height: 36px;
  /* 120% */
  opacity: 0;
  animation: fadeIn 0.5s ease-out forwards;
  animation-delay: 2.8s;


  @media screen and (--desktop-viewport) {
  min-height: 160px;
    animation-delay: 0.8s;
    text-align: start;
    grid-area: title;
    font-family: NotesEsa;
    font-size: 62px;
    font-style: normal;
    font-weight: 700;
    line-height: 68px;
    place-self: start;
    /* 109.677% */
    text-shadow: 0px 2px 1px rgba(0, 0, 0, 0.48);

    >li.active {

      >span {
        text-align: start;
        font-family: NotesEsa;
        font-size: 20px;
        font-style: normal;
        font-weight: 700;
        line-height: 24px;
        /* 120% */
      }
    }
  }

  >li {
    display: none;

    &.active {
      display: block;
    }

    >span {
      display: block;
      color: var(--main-colours-esa-teal-55, #98dbce);
      text-align: center;
      text-shadow: 0px 2px 1px rgba(0, 0, 0, 0.48);
      font-family: NotesEsa;
      font-size: 16px;
      font-style: normal;
      font-weight: 400;
      line-height: 20px;
    }
  }
}

@keyframes fadeIn {
  100% {
    opacity: 1;
  }
}

.arc:focus {


  stroke-width: 17px;
  filter: drop-shadow(0 0 3px rgba(255, 255, 255, 0.7));
  outline: none;
  transition: all 0.2s ease;
  >path {
    transition: stroke 1s cubic-bezier(0.4, 0, 0.2, 1);
  }
}
