import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { LayerList } from "../../types/layer-list";
import { DetailsById } from "./details";

interface LayersState {
  layerList: LayerList;
  details: DetailsById;
  layerIds: string[];
}

const parseUrl = () => {
  // Dummy implementation for parseUrl, replace with actual logic
  return { layerIds: { mainId: "fire.burned_area", compareId: null } };
};

const initialState: LayersState = {
  layerList: [
    {
      id: "fire.burned_area",
      type: "Biosphere",
      name: "Zone br√ªl√©e par le feu",
      shortName: "Feu",
      usageInfo: "¬© ESA",
      description:
        "Tout au long de l'histoire, l'homme a utilis√© le feu comme outil de gestion de l'environnement. Les caract√©ristiques de la v√©g√©tation, principalement les charges de biomasse et l'humidit√©, d√©terminent le comportement du feu, mais le feu modifie √©galement la structure et l'√©volution de la v√©g√©tation. Le climat influe sur la fr√©quence des incendies par le biais des cycles thermiques et des pr√©cipitations, mais il est √©galement affect√© par les incendies, en particulier par les √©missions de gaz et de particules. Cette influence mutuelle entre la v√©g√©tation, le climat et les incendies souligne l'importance de disposer d'informations mondiales √† long terme sur les superficies br√ªl√©es comme donn√©es d'entr√©e pour les mod√©lisateurs du climat et de la v√©g√©tation.\r\n\r\nActuellement, le produit CCI Fire comprend 19 ann√©es de donn√©es sur les surfaces br√ªl√©es √† l'√©chelle mondiale. Le produit est propos√© √† une r√©solution de 250 m avec la date de d√©tection de l'incendie et le type de couverture terrestre qui a √©t√© br√ªl√©, et a des cellules d'un quart de degr√© avec le total des surfaces br√ªl√©es par cellule de la grille, le total des surfaces br√ªl√©es par type de couverture terrestre, et la surface observ√©e. Dans les deux cas, des couches d'incertitude sont √©galement fournies.\n\n**Variable affich√©e:** Surface totale br√ªl√©e en m√®tres carr√©s\r\n\n**P√©riode de temps : ** Janvier 2001 - D√©cembre 2020\r\n\n**R√©solution temporelle:** mensuelle\r\n\n**Etendue g√©ographique:** mondiale\r\n\n**R√©solution spatiale : ** 0,25 x 0,25 degr√©\r\n\n**Version : ** 5.1\r\n\n**DOI:** [10.5285/3628cb2fdba443588155e15dee8e5352](http://dx.doi.org/10.5285/3628cb2fdba443588155e15dee8e5352)\r\n\r\n[Site web du projet CCI Fire ECV de l'ESA] (https://climate.esa.int/projects/fire/)  \r\n[Donn√©es dans le portail de donn√©es ouvertes](https://catalogue.ceda.ac.uk/uuid/3628cb2fdba443588155e15dee8e5352)",
    },
  ],
  details: {},
  layerIds: parseUrl()?.layerIds || [],
};

const layersSlice = createSlice({
  name: "layers",
  initialState,
  reducers: {
    setLayerList: (state, action: PayloadAction<LayerList>) => {
      state.layerList = action.payload.map((layer) => ({ ...layer }));
    },
    setLayerDetails: (state, action: PayloadAction<DetailsById>) => {
      state.details = { ...action.payload };
    },
    setSelectedLayerIds: (
      state,
      action: PayloadAction<{ layerId: string | null; isPrimary: boolean }>,
    ) => {
      const newState = { ...state };

      console.log("üöÄ ~ newState:", newState);
      const key = action.payload.isPrimary ? "mainId" : "compareId";
      newState.layerIds[key] = action.layerId;
      return newState;
    },
  },
});

export const { setLayerList, setLayerDetails, setSelectedLayerIds } =
  layersSlice.actions;

export default layersSlice.reducer;
export type { LayersState };
